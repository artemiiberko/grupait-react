{"version":3,"sources":["App.js","index.js"],"names":["App","randomQuote","min","max","rand","Math","random","round","useState","author","quote","newQuote","setNewQuote","prevQuote","setPrevQuote","gettingQuote","a","fetch","api_url","json","quotes","i","length","className","Card","variant","sx","width","CardContent","display","alignItems","justifyContent","flexDirection","minHeight","Typography","fontSize","color","paddingBottom","CardActions","Button","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAoFeA,MA5Ef,WACE,SAASC,EAAYC,EAAKC,GACxB,IAAIC,EAAOF,EAAM,GAAMG,KAAKC,UAAYH,EAAMD,EAAM,GACpD,OAAOG,KAAKE,MAAMH,GAHP,MAMmBI,mBAAS,CACvCC,OAAQ,GACRC,MAAO,KARI,mBAMNC,EANM,KAMIC,EANJ,OAWqBJ,mBAAS,CACzCC,OAAQ,GACRC,MAAO,KAbI,mBAWNG,EAXM,KAWKC,EAXL,KAgBTC,EAAY,uCAAG,gCAAAC,EAAA,6DACjBF,EAAa,CACXL,OAAQE,EAASF,OACjBC,MAAOC,EAASD,QAHD,SAKKO,MACpB,yIANe,cAKXC,EALW,gBAQIA,EAAQC,OARZ,OAQXC,EARW,OASbC,EAAIpB,EAAY,EAAGmB,EAAOE,QAC9BV,EAAY,CACVH,OAAQW,EAAOC,GAAGZ,OAClBC,MAAOU,EAAOC,GAAGX,QAZF,2CAAH,qDAuBhB,OACE,qBAAKa,UAAU,MAAf,SACE,eAACC,EAAA,EAAD,CACEC,QAAQ,WACRC,GAAI,CACFC,MAAO,SAHX,UAME,eAACC,EAAA,EAAD,CACEF,GAAI,CACFG,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,cAAe,SACfC,UAAW,SANf,UASE,cAACC,EAAA,EAAD,CACER,GAAI,CAAES,SAAU,GAAIC,MAAO,OAAQC,cAAe,QADpD,SAGG1B,EAASF,SAEZ,cAACyB,EAAA,EAAD,CAAYT,QAAQ,KAApB,SAA0Bd,EAASD,WAErC,eAAC4B,EAAA,EAAD,CAAaZ,GAAI,CAAEK,eAAgB,gBAAnC,UACE,cAACQ,EAAA,EAAD,CAAQd,QAAQ,YAAYe,QAhCb,WACrB5B,EAAY,CACVH,OAAQI,EAAUJ,OAClBC,MAAOG,EAAUH,SA6Bb,4BAGA,cAAC6B,EAAA,EAAD,CAAQd,QAAQ,YAAYe,QAASzB,EAArC,gCCtEV0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4406316b.chunk.js","sourcesContent":["import \"./App.css\"\nimport CardContent from \"@mui/material/CardContent\"\nimport Typography from \"@mui/material/Typography\"\nimport Card from \"@mui/material/Card\"\nimport Button from \"@mui/material/Button\"\nimport CardActions from \"@mui/material/CardActions\"\nimport React, { useState } from \"react\"\n\nfunction App() {\n  function randomQuote(min, max) {\n    let rand = min - 0.5 + Math.random() * (max - min + 1)\n    return Math.round(rand)\n  }\n\n  const [newQuote, setNewQuote] = useState({\n    author: \"\",\n    quote: \"\",\n  })\n\n  const [prevQuote, setPrevQuote] = useState({\n    author: \"\",\n    quote: \"\",\n  })\n\n  let gettingQuote = async () => {\n    setPrevQuote({\n      author: newQuote.author,\n      quote: newQuote.quote,\n    })\n    const api_url = await fetch(\n      \"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\"\n    )\n    const quotes = await api_url.json()\n    let i = randomQuote(0, quotes.length)\n    setNewQuote({\n      author: quotes[i].author,\n      quote: quotes[i].quote,\n    })\n  }\n\n  let gettingPrevQuote = () => {\n    setNewQuote({\n      author: prevQuote.author,\n      quote: prevQuote.quote,\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <Card\n        variant=\"outlined\"\n        sx={{\n          width: \"350px\",\n        }}\n      >\n        <CardContent\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            flexDirection: \"column\",\n            minHeight: \"250px\",\n          }}\n        >\n          <Typography\n            sx={{ fontSize: 14, color: \"#666\", paddingBottom: \"15px\" }}\n          >\n            {newQuote.author}\n          </Typography>\n          <Typography variant=\"h5\">{newQuote.quote}</Typography>\n        </CardContent>\n        <CardActions sx={{ justifyContent: \"space-around\" }}>\n          <Button variant=\"contained\" onClick={gettingPrevQuote}>\n            Previous Quote\n          </Button>\n          <Button variant=\"contained\" onClick={gettingQuote}>\n            New Quote\n          </Button>\n        </CardActions>\n      </Card>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}